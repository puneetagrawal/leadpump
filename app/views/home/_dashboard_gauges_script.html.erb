<script type="text/javascript">
$(document).ready(function () {
    initgauge();
});

function initgauge(){
    lead = "<%=@leads%>";
    lead = lead != 0 ? parseInt(lead) : 0;
    leadmax = lead != 0 ? 500  : 1000
    lead_interval = leadmax/10 
    l_range = leadmax/4;

    $("#leadgauge").jqxGauge({ 
        max: leadmax, 
        labels: { interval: lead_interval},
        ticksMinor: { interval: lead_interval/4, size: '5%' },
        ticksMajor: { interval: lead_interval/2, size: '9%' },
        ranges: [{ startValue: 0, endValue: l_range, style: {fill: '#e02629', stroke: '#e02629'  }, endWidth: 5, startWidth: 1 },
        { startValue: l_range, endValue: l_range * 2, style: {fill: '#ff8000', stroke: '#ff8000' }, endWidth: 10, startWidth: 5 },
        { startValue: l_range * 2, endValue: l_range * 3, style: { fill: '#fbd109', stroke: '#fbd109' }, endWidth: 13, startWidth: 10 },
        { startValue: l_range * 3, endValue: l_range * 4, style: { fill: '#4bb648', stroke: '#4bb648' }, endWidth: 16, startWidth: 13 }],
        value: lead,
        colorScheme: 'scheme05',
        animationDuration: 1200,
        width: 180
    });

    eft = "<%=@gross_values['g_eft'.to_sym]%>";
    eft = parseInt(eft) > 999 ? parseInt(eft)/1000 : eft
    eft_avg = "<%=@gross_values['e_avg'.to_sym]%>" !=0 ? "<%=@gross_values['e_avg'.to_sym]%>" : 220;
    total = eft_avg * 40
    total = parseInt(total) > 999 ? parseInt(total)/1000 : total
    eft_interval = parseInt(total/10)
    e_range = total/4

    $("#eftgauge").jqxGauge({ 
        max: total, 
        labels: { interval: eft_interval},
        ticksMinor: { interval: eft_interval/4, size: '5%' },
        ticksMajor: { interval: eft_interval/2, size: '9%' },
        ranges: [{ startValue: 0, endValue: e_range, style: {fill: '#e02629', stroke: '#e02629'  }, endWidth: 5, startWidth: 1 },
        { startValue: e_range, endValue: e_range * 2, style: {fill: '#ff8000', stroke: '#ff8000' }, endWidth: 10, startWidth: 5 },
        { startValue: e_range * 2, endValue: e_range * 3, style: { fill: '#fbd109', stroke: '#fbd109' }, endWidth: 13, startWidth: 10 },
        { startValue: e_range * 3, endValue: e_range * 4, style: { fill: '#4bb648', stroke: '#4bb648' }, endWidth: 16, startWidth: 13 }],
        value: eft,
        colorScheme: 'scheme05',
        animationDuration: 1200,
        width: 180
    });

   

    mem_sold = "<%=@gross_values['g_mem'.to_sym]%>";
    mem_avg = "<%=@gross_values['m_avg'.to_sym]%>" != 0 ? "<%=@gross_values['m_avg'.to_sym]%>" : 220;
    m_total = 220;
    mem_interval = 220/10
    m_range = m_total/4;

    $("#membersoldgauge").jqxGauge({ 
        max: m_total, 
        labels: { interval: mem_interval},
        ticksMinor: { interval: mem_interval/4, size: '5%' },
        ticksMajor: { interval: mem_interval/2, size: '9%' },
        ranges: [{ startValue: 0, endValue: m_range, style: {fill: '#e02629', stroke: '#e02629'  }, endWidth: 5, startWidth: 1 },
        { startValue: m_range, endValue: m_range * 2, style: {fill: '#ff8000', stroke: '#ff8000' }, endWidth: 10, startWidth: 5 },
        { startValue: m_range * 2, endValue: m_range * 3, style: { fill: '#fbd109', stroke: '#fbd109' }, endWidth: 13, startWidth: 10 },
        { startValue: m_range * 3, endValue: m_range * 4, style: { fill: '#4bb648', stroke: '#4bb648' }, endWidth: 16, startWidth: 13 }],
        value: mem_sold,
        colorScheme: 'scheme05',
        animationDuration: 1200,
        width: 180
    });


    cash = "<%=@gross_values['g_cash'.to_sym]%>";
    cash = parseInt(cash) > 999 ? parseInt(cash)/1000 : cash
    cash_avg = "<%=@gross_values['c_avg'.to_sym]%>" != 0 ? "<%=@gross_values['c_avg'.to_sym]%>" : 220;
    c_total = cash_avg * 40;
    c_total = parseInt(c_total) > 999 ? parseInt(c_total)/1000 : c_total
    cash_interval =  parseInt(c_total/10)
    c_range = c_total/4;

    $("#cashgauge").jqxGauge({ 
        max: c_total, 
        labels: { interval: cash_interval},
        ticksMinor: { interval: cash_interval/4, size: '5%' },
        ticksMajor: { interval: cash_interval/2, size: '9%' },
        ranges: [{ startValue: 0, endValue: c_range, style: {fill: '#e02629', stroke: '#e02629'  }, endWidth: 5, startWidth: 1 },
        { startValue: c_range, endValue: c_range * 2, style: {fill: '#ff8000', stroke: '#ff8000' }, endWidth: 10, startWidth: 5 },
        { startValue: c_range * 2, endValue: c_range * 3, style: { fill: '#fbd109', stroke: '#fbd109' }, endWidth: 13, startWidth: 10 },
        { startValue: c_range * 3, endValue: c_range * 4, style: { fill: '#4bb648', stroke: '#4bb648' }, endWidth: 16, startWidth: 13 }],
        value: cash,
        colorScheme: 'scheme05',
        animationDuration: 1200,
        width: 180
    });


    total_gross = "<%=@gross_values['g_gross'.to_sym]%>";
    total_gross = parseInt(total_gross) > 999 ? parseInt(total_gross)/1000 : total_gross
    t_avg = "<%=@gross_values['g_avg'.to_sym]%>" != 0 ? "<%=@gross_values['g_avg'.to_sym]%>" : 220;
    g_total = t_avg * 40;
    g_total = parseInt(g_total) > 999 ? parseInt(g_total)/1000 : g_total
    t_g_interval = parseInt(g_total/10)
    g_range = g_total/4;

    $("#totalgrossgauge").jqxGauge({ 
        max: g_total, 
        labels: { interval: t_g_interval},
        ticksMinor: { interval: t_g_interval/4, size: '5%' },
        ticksMajor: { interval: t_g_interval/2, size: '9%' },
        ranges: [{ startValue: 0, endValue: g_range, style: {fill: '#e02629', stroke: '#e02629'  }, endWidth: 5, startWidth: 1 },
        { startValue: g_range, endValue: g_range * 2, style: {fill: '#ff8000', stroke: '#ff8000' }, endWidth: 10, startWidth: 5 },
        { startValue: g_range * 2, endValue: g_range * 3, style: { fill: '#fbd109', stroke: '#fbd109' }, endWidth: 13, startWidth: 10 },
        { startValue: g_range * 3, endValue: g_range * 4, style: { fill: '#4bb648', stroke: '#4bb648' }, endWidth: 16, startWidth: 13 }],
        value: total_gross,
        colorScheme: 'scheme05',
        animationDuration: 1200,
        width: 180
    });
    

    $('#leadgauge').on('valueChanging', function (e) {
        $(this).siblings('.gaugeValue').text(Math.round(e.args.value));
    });
    $('#eftgauge').on('valueChanging', function (e) {
        $(this).siblings('.gaugeValue').text(Math.round(e.args.value) + ' $(k)');    
    });
    $('#totalgrossgauge').on('valueChanging', function (e) {
        $(this).siblings('.gaugeValue').text(Math.round(e.args.value) + ' $(k)');
    });
    $('#membersoldgauge').on('valueChanging', function (e) {
        $(this).siblings('.gaugeValue').text(Math.round(e.args.value));
    });
    $('#cashgauge').on('valueChanging', function (e) {
        $(this).siblings('.gaugeValue').text(Math.round(e.args.value) + ' $(k)');
    });
}

function getinterval(maxvalue){
    interval = parseInt(maxvalue) * 40
    return interval/10
}
</script>
